Apa itu NodeJS
Node JS merupakan teknologi yang bisa digunakan untuk menjalankan kode JS diluar web browser

Concurrency dan Pararel
Concurrency artinya mengerjakan beberapa pekerjaan satu persatu (bergantian)
Parallel artinya mengerjakan beberapa pekerjaan pada satu waktu
(Mengerjakan pada waktu yang sama)

Syncronous dan Asynchronous 
Synchronous adalah ketika kode program kita berjalan secara sequential dan semua tahapan ditunggu sampai prosesnya selesai baru akan dieksekusi ke tahapan selanjutnya

Asynchronous adalah ketika kode program kita berjalan dan tidak perlu menunggu eksekusi kode tersebut selesai, kita bisa lanjutkan ke tahapan kode program selanjutnya

Treadpol Web Model
Tread adalah proses ringan yang biasanya dibuat saat membuat aplikasi
Walaupun bisa dibilang ringan, namun jika terlalu banyak membuat thread, maka tetap akan memberatkan sistem operasi.
Oleh karena itu, biasanya kita akan menggunakan threadpool untuk melakukan management thread
Threadpool merupakan tempat dimana kita menyimpan thread, ketika kita butuh kita akan ambil dari threadpool, ketika sudah selesai, kita akan kembalikan thread nya ke threadpool
Dengan threadpool kita bisa memanfaatkan thread yang sama berkali kali tanpa harus membuat thread baru terus menerus.
Namun threadpool model memiliki kekurangan, ketika thread sedang sibuk semua, secara otomatis request selanjutnya harus menunggu sampai ada thread yang selesai melakukan tugas sebelumnya.

Blocking
Saat membuat kode program, secara default kode program akan berjalan secara blocking atau Synchronous
Artinya kita harus menunggu sebuah kode selesai sebelum kode selanjutnya dieksekusi.
Contohnya ketika kita membuat kode program untuk membaca file, jika kode kita blocking maka kita harus menunggu program selesai membaca file baru kita bisa melanjutkan kode program selanjutnya.

Non Blocking
Non blocking berbeda dengan blocking kode program non blocking akan dieksekusi tanpa harus menunggu kode program tersebut selesai.
Non blocking akan dijalankan secara asynchronous 
Ketika memanggil kode non blocking biasnya kita perlu mengirimkan callback untuk dipanggil oleh kode non blocking ketika kodenya sudah selesai.
Contohnya non blocking adalah JS Async seperti AJAX, Fetch API dan lain lain.

Node REPL (Read Eval Print Loop)
Yaitu mekanisme dimana program bisa memnaca langsung kode program yang diketikan,
lalu mengeksekusinya, menampilkan hasilnya lalu mengulanginya dari awal
Untuk menggunakan NodeJS REPL cukup jalankan aplikasi node saja
> node

Modules
Standar Library yang terdapat di Node JS bisa kita gunakan layalnya JS Modules
Karena Node Js menggunakan Modules, jika ingin menggunakan modules, kita juga perlu
memberi tahu bahwa file JS kita menggunakan modules, caranya dengan mengubah nama file dari
.js menjadi .mjs

Global Async
Saat kita belajar JavaScript untuk menggunakan Async Await, bisanya kita perlu
membuat dahulu function yang kita tandai sebagai asynchronous
Saat kita menggunakan Module, secara default global code adalah asynchronous
oleh karena itu kita bisa menggunakan AsyncAwait

Debugger
NodeJS memiliki fitur debugger dimana kita bisa mengikuti tahapan eksekusi program
di Node JS
Hal ini sangat cocok ketika kita melakukan proses sebugging mencari
sebab masalah yang terjadi.
Breakpoint
Dalam debugging, terdapat istilah breakpoint, yaitu lokasi dimana
kita ingin menghentikan eksekusi kode program
Biasanya ini dilakukan untuk mengawasi data-data disekitar lokasi
berhentinya tersebut
Perintah Debugger
Saat masuk ke mode debug, ada beberapa perintah yang bisa kita gunakan Dalam
melakukan debugging
const, c: Continue Execution
next, n : Step next
step, s: Step in
out, o: Step out
pause : Pause running code

DNS
DNS merupakan standar library yang bisa digunakan untuk bekerja
dengan DNS (Domain Name Server)

Event
Event adalah standar libaray di Node JS yang bisa digunakan sebagai
implementasi Event Listener
Didalam Events terdapat sebuah class bernama EventEmitter yang bisa 
digunakan untuk menampung data listener per jenis Event
Lalu kita bisa melakukan emmit untuk mentrigger jenis event dan mengirimkan
ke event tersebut.

Global
Didalam NodeJS terdapat library berupa variable function yang secara global
bisa diakses dimana saja, tanpa harus melakukan import
Kita bisa melihat detail apa saja fitur yang terdapat secara global di halaman dokumentasinya

Process
Process merupakan standar library yang digunakan untuk mendapatkan
informasi proses NodeJS yang sedang berjalan
Process juga merupakan instance dari Event Emiiter, sehingga bisa menambahkan listener 
kedalam proses.

Readline
Readline merupakan standar library yang digunakan untuk membaca input

Report
Report merupakan fitur yang terdapat di NodeJS untuk membuat laporan
secara otomatis dalam file ketika suatu terjadi pada aplikasi NodeJS kita.

Buffer
Buffer merupakan object yang berisikan urutan byte dengan panjang tetap
Buffer merupakan turunan dari tipe daya Uint8Array
Ini merupakan library global

Buffer Encoding
Buffer juga bisa digunakan untuk melakukan encoding dari satu encoding ke encoding
lainya
Ada banyak encoding yang didukung oleh Buffer, misal utf8, ascii, hex, base64, base64url dan lainya

Stream
Stream adalah standar libaray untuk kontrak aliran data di NodeJS
Ada banyak sekali stream object di NodeJS
Stream bisa jadi object yang bisa dibaca, atau bisa ditulis dan stream adalah
turunan dari EventEmitter

Timer 
Timer merupakan standar library untuk melakukan scheduling
Functional di Timer terdapat di globals, sehingga kita bisa menggunakan
tanpa melakukan import, namun semua function Timer menggunakan callback
Jika ingin menggunakan timer versi Promise, kita bisa meng import dari modules
timer/promise

Net 
Net merupakan standar library yang bisa digunakan untuk membuat
network client dan server berbasis TCP
Net Server dan client merupakan object stream, sehingga kita bisa baca datanya
tulis datanya dan juga menambahkan listener.

URL 
URL adalah standar libray untuk bekerja dengan URL

Util
Util adalah standar library yang berisikan utility utility yang
bisa kita gunakan untuk mempermudah pembuatan kode program di NodeJs

Zlib
Zlib adalah standar library yang digunakan untuk melakukan kompresi menggunakan Gzip

Console
Console adalah standar library yang sudah sering digunakan
Secara global, object console bisa kita gunakan tanpa harus
melakukan import module, dan console melakukan print text nya ke stdout
Namun jika kita juga bisa membuat object Console tersendiri jika kita mau

Worker Threads
Standar Library yang bisa digunakan untuk menggunakan thread ketika
mengeksekusi JS secara Parallel
Worker thread sangat cocok ketika kita membuat kode program yang dibutuh
jalan secara pararel, dan biasanya kasusnya adalah ketika kode program kita
membutuhkan proses CPU intensive seperti misalnya enkripsi atau kompresi
Cara kerja worker thread mirip dengan web worker di JS web API

HTTP client
NodeJS juga memiliki standar library untuk HTTP
Salah satu fitur di module HTTP adalah HTTP Client, dimana kita
bisa melakukan simulasi HTTP request menggunakan NodeJS
Terdapat 2 jenis module HTTP di NodeJS, HTTP dan HTTPS.

HTTP Server 
Stdanar Library HTTP juga tidak hanya bisa digunakan untuk membuat HTTP client, tetapi juga bisa
digunakan untuk membuat HTTP Server
Untuk kasus sederhana, cocok sekali jika ingin membuat HTTP Server menggunakan standar
library NodeJS, namun untuk kasus yang lebih kompleks direkomendasikan menggunakan library
atau framework yang lebih mudah digunakan.

Cluster
Seperti yang dijelaskan diawal bahwa NodeJS secara default berjalan 
single thread, kecuali jika kita membuat thread menual menggunakan worker thread
tapi tetap dalam satu process.
NodeJS memiliki standar library bernama Cluster, dimana kita bisa menjalankan beberapa
proses NodeJS secara sekaligus.
Ini sangat cocok ketika kita menggunakan CPU yang multicore, sehingga semua Concurrency
bisa kita utilisasi dengan baik, misal kita jalankan proses NodeJS sejumlah CPU core.

Cluster Primary dan Worker
Di dalam Cluster terdapat 2 jenis aplikasi primary dan worker
Primary biasanya digunakan sebagai koordinator atau manajer untuk para worker
Sedangkan worker sendiri adalah aplikasi yang menjalankan tugasnya.